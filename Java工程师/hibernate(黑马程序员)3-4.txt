--hibernate_day03-day_04

--表于表之间的关系
1.一对多
2.多对多
（1）订单和商品的关系，一个订单里面有多个商品，一个商品属于多个订单

（2）用户和角色多对多关系
-用户：小王，小马，小宋
-角色：总经理，秘书，司机，保安
  比如小王：可以是总经理，可以是司机
  比如小宋：可以是司机，可以是秘书，可以是保安
  比如小马：可以是秘书，可以是总经理
  一个用户里面可以有多个角色，一个角色里面可以有多个用户

（3）多对多建表，创建第三张表维护关系

3.一对一
（1）在中国，一个男人只能有一个妻子，一个女人只能有一个丈夫


--hibernate一对多操作（重点）
--一对多映射配置
1.以客户和联系人为例，客户是一，联系人是多
第一步，创建两个实体类，客户和联系人

第二步，让两个实体类之间互相表示
（1）在客户实体类里面表示多个联系人
一个客户里面有多个联系人
（2）在联系人实体类里面表示所属客户
一个联系人只能属于一个客户

第三步 配置映射关系
（1）一般一个实体类对应一个映射文件
（2）把映射最基本配置完成

（3）在映射文件中，表示所有联系人


--一对多级联操作
1.级联保存
（1）添加一个客户，为这个客户添加多个联系人

2.级联删除
（1）删除某一个客户，这个客户里面的所有的联系人也删除


--一对多级联保存
1.添加客户，为这个客户添加一个联系人
（1）复杂写法
（2）简单写法


--一对多级联删除
1.删除某个客户，把客户里面所有的联系人删除

2.具体实现
第一步 在客户映射文件set标签进行配置
（1）使用属性cascade属性值delete
<set name="setLinkMan" cascade="save-update,delete">
第二步 在代码中直接删除客户
（1）根据id查询对象，调用session里面的delete方法删除
Customer customer = session.get(Customer.class, 2);
session.delete(customer);

3.执行过程
（1）根据id查询客户
（2）根据外键id查询联系人
（3）把联系人的外键设置为null


--一对多修改操作

（2）解决方式：让其中的一方不维护外键
-一对多里面，让其中是“一”的那一方放弃外键维护
比如：一个国家有总统，国家有很多人，总统不能认识国家所有的人，国家所有人可以认识总统

（3）具体实现
在放弃关系维护映射文件中，进行配置，在set标签上面使用inverse属性
inverse属性默认值：false：不放弃关系维护；true：表示放弃关系维护


--多对多映射配置
以用户和角色为例演示

第一步 创建实体类，用户和角色

第二步 让两个实体类之间相互表示
（1）一个用户里面表示所有角色，使用set集合
（2）一个角色有多个用户，使用set集合

第三步 配置映射关系
（1）基本配置
（2）配置多对多关系
在用户里面表示所有的角色，使用set标签
在角色里面表示所有用户，使用set标签

第四步 在核心配置文件中引入映射文件


--多对多级联删除
第一步 在set标签进行配置，cascade值 delete
第二步 删除用户


--维护第三张表关系
1.用户和角色多对多关系,维护关系通过第三张表维护

2.让某个用户有某个角色
第一步 根据id查询用户和角色

第二步 将角色添加到用户的集合中去

3.让某个用户没有某个角色
第一步 根据id查询用户和角色

第二步 从用户里面把角色去掉
（1）从set集合里面把角色移除
